;--------------------------------------------------------------------------
;
;              Build this with the "Source" menu using
;                     "Build All" option
;
;--------------------------------------------------------------------------
		DOSSEG
		.MODEL	SMALL		
		.8086				


; 8253 Port Address):
L8253T0			EQU	100H			; Timer0's port number in I/O space
L8253T1			EQU 	102H			; Timer1's port number in I/O space
L8253T2			EQU 	104H			; Timer2's port number in I/O space
L8253CS			EQU 	106H			; 8253 Control Register's port number in I/O space

; 8255 Port Address):
L8255PA			EQU	121H			; Port A's port number in I/O space
L8255PB			EQU 	123H			; Port B's port number in I/O space
L8255PC			EQU 	125H			; Port C's port number in I/O space
L8255CS			EQU 	127H			; 8255 Control Register's port number in I/O space


IRQNum			EQU	147			

Patch_Protues	EQU	IN AL, 0	;	Simulation Patch for Proteus, please ignore this line


    WaitForHWInt MACRO INTNum		; INTNum is the HW INT number
		MOV AL, INTNum   			;
		OUT 0, AL					;
		STI
		CLI
    ENDM

;-----------------------------------------------------------
		.data					
DelayShort	dw	800				
DelayLong	dw	8000			
SEGTAB  	DB 3FH	; 7-Segment Tube
	        DB 06H	;
		DB 5BH	;            a a a
	        DB 4FH	;         f         b
		DB 66H	;         f         b
		DB 6DH	;         f         b
		DB 7DH	;            g g g 
		DB 07H	;         e         c
		DB 7FH	;         e         c
		DB 6FH	;         e         c
        	DB 77H	;            d d d     h h h
		DB 7CH	; ----------------------------------
		DB 39H	;       b7 b6 b5 b4 b3 b2 b1 b0
		DB 5EH	;       DP  g  f  e  d  c  b  a
		DB 79H	;
		DB 71H	;
STUDENTID	DB 0
		DB 3
		DB 3
		DB 9
;-----------------------------------------------------------
;	¶¨Òå´úÂë¶Î                                             |
;-----------------------------------------------------------
		.code						; Code segment definition
		.startup					; Entrance of this program
;------------------------------------------------------------------------
		Patch_Protues					; Simulation Patch for Proteus,
								; Please ignore the above code line.
;------------------------------------------------------------------------

START:								; Modify the following codes accordingly
		MOV AX, @DATA					;
		MOV DS, AX					; Initialize DS

		CALL INIT8255					; Initialize 8255 
		
		MOV  BL, IRQNum					; BL is used as a parameter to call the procedure INT_INIT
		CALL INT_INIT					; Procedure INT_INIT is used to set up the IVT
	        MOV CX, 0
		CALL DISPLAY
		
L1:		JMP L1


;===================================================================================
; Attention:
; The following codes is a Patching for Proteus 8086 Hardware Simulation Bug.
; Use these codes in the case you want the 8086 to halt and waiting for HW INT only! 
; You can treat it as if it doesn't exist. 
;
; If you need to use HW INT, please uncomment it, or
; Don't modify it, leave it here just as it is.
;		WaitForHWInt IRQNum				
;====================================================================================
		HLT						; 
;=====================================================================================

INIT8255 PROC
		MOV AL,10000001B
		MOV DX,L8255CS
		OUT DX, AL
		RET
INIT8255 ENDP

DISPLAY 	PROC
    	MOV DX, L8255PA
	MOV AL, 1
	SHL AL, CL
	XOR AL, 0FFH
	OUT DX, AL
	
	MOV DX, L8255PB
	MOV BX, CX
	MOV BL, STUDENTID[BX]
	MOV AL, SEGTAB[BX]
	OUT DX, AL
    	RET
DISPLAY 	ENDP

;-------------------------------------------------------------
;                                                             |                                                            |
; Function£ºINTERRUPT Vector Table INIT						  |
; Input: BL = Interrupt number								  |
; Output: None			                                	  |
;                                                             |
;-------------------------------------------------------------	
INT_INIT	PROC FAR
		CLI				; Disable interrupt
		MOV CL, 2
		SHL BX, CL
		MOV AX, 0
		MOV ES, AX			; To set up the interrupt vector table
		MOV WORD PTR ES:[BX], OFFSET MYIRQ
		MOV WORD PTR ES:[BX+2], SEG MYIRQ
		STI
	        RET	
INT_INIT	ENDP

		
;--------------------------------------------------------------
;                                                             |                                                            |
; FUNCTION: INTERRUPT SERVICE  Routine £¨ISR£©				  | 
; Input::                                                     |
; Output:                                                     |
;                                                             |
;--------------------------------------------------------------	
		
MYIRQ 	PROC FAR
	        CLI
		
		INC CX
		AND CX, 3
		CALL DISPLAY
		
		STI
		RET
MYIRQ 	ENDP

	.stack 100h				
	END					